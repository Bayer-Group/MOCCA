name: Publish Python distribution to PyPI

on:
  push:
    branches:
      - main

jobs:
# BUILD THE DISTRIBUTION PACKAGES
  build:
    name: Build distribution
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Install pypa/build
      run: |
        pip install -r requirements.txt
        pip install build
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v3
      with:
        name: python-package-distributions
        path: dist/

# PUBLISH TO PYPI
  publish-to-pypi:
    name: >-
      Publish Python distribution to PyPI
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/test_project_oboril
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

# SIGN AND UPLOAD TO GITHUB RELEASE
  github-release:
    name: >-
      Sign the Python distribution with Sigstore
      and upload them to GitHub Release
    needs:
    - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v1.2.3
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release create
        '${{ github.ref_name }}'
        --repo '${{ github.repository }}'
        --notes ""
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release upload
        '${{ github.ref_name }}' dist/**
        --repo '${{ github.repository }}'

# CREATE A GITHUB PAGES SITE
  release_sphinx:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Installing sphinx
        run: |
          pip install sphinx sphinx-rtd-theme

      - name: Building the docs
        run: |
          cd docs
          make html
          cd ..
          ls docs/_build

      - name: Setup Git
        run: |
          git config --global user.name 'Workflow Bot'
          git config --global user.email 'jan.oboril@gmail.com'

      - name: Deploying to gh-pages branch
        run: |
          git checkout -b gh-pages
          cp -r docs/_build/html .
          git rm -r $(ls -I "html")
          rm -r $(ls -I "html")
          mv html/* .
          rm -r html
          git add .
          git commit -m "Deploying to gh-pages"
          git push origin gh-pages