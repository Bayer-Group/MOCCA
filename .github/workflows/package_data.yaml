name: Compress and Deploy Example Data

on:
  push:
    branches: ["main"]
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "example-data"
  cancel-in-progress: false

jobs:
  compress-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Compress the data
      - name: Compress the data
        run: |
          for dir in src/mocca2/example_data/data/*; do
            tar -cjf $dir.tar.bzip2 $dir
          done
          mkdir _temp
          mv src/mocca2/example_data/data/*.tar.bzip2 .

      # Configure Git, Important for actions to commit
      - name: Configure Git
        run: |
          git config --global user.email "jan.oboril@gmail.com"
          git config --global user.name "Jan Oboril"

      # Check if branch exists and create or clean it
      - name: Prepare Branch
        run: |
          if git show-ref --quiet refs/heads/example-data; then
            echo "Branch exists, checking out and cleaning."
            git checkout example-data
            git rm -rf . && git clean -fdx
          else
            echo "Branch does not exist, creating as orphan."
            git checkout --orphan example-data
            git reset --hard
            git commit --allow-empty -m "Initial commit on example-data"
          fi
      # Add the compressed data file
      - name: Add Compressed Data and Commit
        run: |
          git add *.tar.bzip2
          git commit -m "Compressed example data"

      # Push the branch to remote
      - name: Push Changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: example-data